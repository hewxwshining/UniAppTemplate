{"version":3,"file":"user.js","sources":["store/modules/user.ts"],"sourcesContent":["import { defineStore } from 'pinia'\r\nimport { ref } from 'vue'\r\nimport store from \"@/store\";\r\nimport { clearToken, getAccessToken } from '@/utils/cache'\r\nimport { userInfoApi } from '@/api/auth';\r\n\r\n// 用户信息接口\r\ninterface UserInfo {\r\n\tid ?: string\r\n\tusername ?: string\r\n\tnickname ?: string\r\n\tavatar ?: string\r\n\tphone ?: string\r\n\temail ?: string\r\n\trole ?: string\r\n\tpermissions ?: string[]\r\n\t[key : string] : any\r\n}\r\n\r\nexport const useUserStore = defineStore('user', () => {\r\n\t// 登录状态\r\n\tconst isLogin = ref(false)\r\n\t// 用户信息\r\n\tconst userInfo = ref<UserInfo>({})\r\n\r\n\t// 初始化用户状态\r\n\tconst initUserState = () => {\r\n\t\tconst token = getAccessToken()\r\n\t\tif (token) {\r\n\t\t\tsetUserInfos()\r\n\t\t\tisLogin.value = true\r\n\t\t}\r\n\t}\r\n\r\n\t// 设置用户信息\r\n\tconst setUserInfos = async () => {\r\n\t\tuserInfo.value = await getApiUserInfo()\r\n\t}\r\n\r\n\t// 清除用户信息\r\n\tconst clearUserInfo = () => {\r\n\t\tuserInfo.value = {}\r\n\t\tisLogin.value = false\r\n\t\tclearToken()\r\n\t}\r\n\r\n\t// 检查登录状态\r\n\tconst checkLoginStatus = () : boolean => {\r\n\t\tlet accessToken = getAccessToken()\r\n\t\treturn isLogin.value && !!accessToken\r\n\t}\r\n\t// 获取用户信息\r\n\tconst getUserInfo = () : UserInfo => {\r\n\t\treturn userInfo.value\r\n\t}\r\n\t// 获取当前用户信息\r\n\tconst getApiUserInfo = () => {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tuserInfoApi()\r\n\t\t\t\t.then(async (res : any) => {\r\n\t\t\t\t\tif (res.result === null) return;\r\n\t\t\t\t\tvar d = res.result;\r\n\t\t\t\t\tconst userInfos = {\r\n\t\t\t\t\t\tid: d.id,\r\n\t\t\t\t\t\taccount: d.account,\r\n\t\t\t\t\t\trealName: d.realName,\r\n\t\t\t\t\t\tphone: d.phone,\r\n\t\t\t\t\t\tidCardNum: d.idCardNum,\r\n\t\t\t\t\t\temail: d.email,\r\n\t\t\t\t\t\taccountType: d.accountType,\r\n\t\t\t\t\t\tavatar: d.avatar ?? '/upload/logo.png',\r\n\t\t\t\t\t\taddress: d.address,\r\n\t\t\t\t\t\tsignature: d.signature,\r\n\t\t\t\t\t\torgId: d.orgId,\r\n\t\t\t\t\t\torgName: d.orgName,\r\n\t\t\t\t\t\tposName: d.posName,\r\n\t\t\t\t\t\troles: d.roleIds,\r\n\t\t\t\t\t\tauthBtnList: d.buttons,\r\n\t\t\t\t\t\ttenantId: d.tenantId,\r\n\t\t\t\t\t\tcurrentTenantId: d.currentTenantId,\r\n\t\t\t\t\t\tworktop: d.worktop,\r\n\t\t\t\t\t\ttime: new Date().getTime(),\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(userInfos);\r\n\t\t\t\t});\r\n\t\t});\r\n\t}\r\n\treturn {\r\n\t\tisLogin,\r\n\t\tuserInfo,\r\n\t\tinitUserState,\r\n\t\tsetUserInfos,\r\n\t\tclearUserInfo,\r\n\t\tcheckLoginStatus,\r\n\t\tgetUserInfo\r\n\t}\r\n})\r\n\r\nexport function useUserStoreHook() {\r\n\treturn useUserStore(store);\r\n}"],"names":["defineStore","ref","getAccessToken","clearToken","userInfoApi"],"mappings":";;;;;AAmB4BA,cAAY,YAAA,QAAQ,MAAM;AAE/C,QAAA,UAAUC,kBAAI,KAAK;AAEnB,QAAA,WAAWA,kBAAc,CAAA,CAAE;AAGjC,QAAM,gBAAgB,MAAM;AAC3B,UAAM,QAAQC,YAAAA;AACd,QAAI,OAAO;AACG;AACb,cAAQ,QAAQ;AAAA,IACjB;AAAA,EAAA;AAID,QAAM,eAAe,YAAY;AACvB,aAAA,QAAQ,MAAM;EAAe;AAIvC,QAAM,gBAAgB,MAAM;AAC3B,aAAS,QAAQ;AACjB,YAAQ,QAAQ;AACLC,gBAAAA;EAAA;AAIZ,QAAM,mBAAmB,MAAgB;AACxC,QAAI,cAAcD,YAAAA;AACX,WAAA,QAAQ,SAAS,CAAC,CAAC;AAAA,EAAA;AAG3B,QAAM,cAAc,MAAiB;AACpC,WAAO,SAAS;AAAA,EAAA;AAGjB,QAAM,iBAAiB,MAAM;AACrB,WAAA,IAAI,QAAQ,CAAC,YAAY;AACnBE,2BAAA,EACV,KAAK,OAAO,QAAc;AAC1B,YAAI,IAAI,WAAW;AAAM;AACzB,YAAI,IAAI,IAAI;AACZ,cAAM,YAAY;AAAA,UACjB,IAAI,EAAE;AAAA,UACN,SAAS,EAAE;AAAA,UACX,UAAU,EAAE;AAAA,UACZ,OAAO,EAAE;AAAA,UACT,WAAW,EAAE;AAAA,UACb,OAAO,EAAE;AAAA,UACT,aAAa,EAAE;AAAA,UACf,QAAQ,EAAE,UAAU;AAAA,UACpB,SAAS,EAAE;AAAA,UACX,WAAW,EAAE;AAAA,UACb,OAAO,EAAE;AAAA,UACT,SAAS,EAAE;AAAA,UACX,SAAS,EAAE;AAAA,UACX,OAAO,EAAE;AAAA,UACT,aAAa,EAAE;AAAA,UACf,UAAU,EAAE;AAAA,UACZ,iBAAiB,EAAE;AAAA,UACnB,SAAS,EAAE;AAAA,UACX,OAAM,oBAAI,KAAK,GAAE,QAAQ;AAAA,QAAA;AAE1B,gBAAQ,SAAS;AAAA,MAAA,CACjB;AAAA,IAAA,CACF;AAAA,EAAA;AAEK,SAAA;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEF,CAAC;"}